# secrets.GCP_SERVICE_ACCOUNT_KEY_DEV
# sokontokoro-factory-develop-65bafa735fc5_ci-account.json
#
# secrets.FIREBASE_TOKEN
# $ firebase login:ci
#

name: ci-develop

on:
  push:
    branches:
      - develop
      - develop-**

  schedule:
    - cron: "0 9 * * 1"

env:
  NODE_VERSION: 12.x

jobs:
  lint:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      # https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: "Get yarn cache directory path"
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: "Restore yarn cache"
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install
      - run: yarn workspace @sokontokoro/mikan build
      - run: yarn lint

  build-and-deploy-app:
    runs-on: macos-latest
    needs: lint
    strategy:
      matrix:
        app:
          - "honocar"
          - "shakarin"
          - "maruten"
          - "oimo-no-mikiri"
          - "rinadoko"
          - "ranking"
    if: ${{
      github.ref == 'refs/heads/develop' ||
      github.ref == 'refs/heads/develop-${{ matrix.app }}'
      }}
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      # https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: "Get yarn cache directory path"
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: "Restore yarn cache"
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install
      # todo: reuse as artifacts
      - run: yarn workspace @sokontokoro/mikan build
      - run: yarn workspace ${{ matrix.app }} build:dev

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY_DEV }}
          export_default_credentials: true

      - name: Deploy to dev
        if: ${{ github.event_name == 'push' }}
        run: yarn workspace ${{ matrix.app }} deploy:dev

  build-and-deploy-firebase:
    runs-on: macos-latest
    needs: lint
    if: ${{
      github.ref == 'refs/heads/develop' ||
      github.ref == 'refs/heads/develop-firebase'
      }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      # https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: "Get yarn cache directory path"
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: "Restore yarn cache"
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install
      # todo: reuse as artifacts
      - run: yarn workspace @sokontokoro/mikan build
      - run: yarn workspace @sokontokoro/firebase build:dev

      - name: Deploy to dev
        if: ${{ github.event_name == 'push' }}
        run: yarn workspace @sokontokoro/firebase deploy:dev --token ${{ secrets.FIREBASE_TOKEN }}

  notify:
    runs-on: macos-latest
    needs:
      - build-and-deploy-app
      - build-and-deploy-firebase
    if: always()
    steps:
      # run this action to get workflow conclusion
      # You can get conclusion via env (env.WORKFLOW_CONCLUSION)
      - uses: technote-space/workflow-conclusion-action@v2

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ env.WORKFLOW_CONCLUSION }}
          fields: all
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
